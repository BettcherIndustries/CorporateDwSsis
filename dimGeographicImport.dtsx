<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/6/2008 8:33:26 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BIRM01718A"
  DTS:CreatorName="BETLAN\mikej"
  DTS:Description="DTS Wizard-generated package"
  DTS:DTSID="{5F03EA0A-555F-4020-8339-D86F31A37DD3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="dimGeographicImport"
  DTS:VersionBuild="180"
  DTS:VersionGUID="{F3FB4D45-317A-4126-8D9B-3C3CBD9F37B9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BettcherDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0261F04F-EF31-4D88-9A5C-B8278A649A44}"
      DTS:ObjectName="BettcherDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=birm01886b;Initial Catalog=BettcherDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Bet_App]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9A13EAC0-9F1A-4742-83EF-E7BC622588AC}"
      DTS:ObjectName="Bet_App">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCSIDBS;Initial Catalog=BET_App;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-dimCustomerImport-{C9A6A73A-15E8-497C-B0E2-B4BE13249D09}BIRM01815K.GAN_App;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BSW_Apps]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C0171A95-C545-4404-9275-6EC6D5C2BD05}"
      DTS:ObjectName="BSW_Apps">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCSIDBS;Initial Catalog=Bsw_apps;Provider=SQLNCLI11;Integrated Security=SSPI;Application Name=SSIS-dimCustomerImport-{FE1D7256-FD0F-45F4-B79B-C21E703E78DD}BIRMCSIDBS.Bsw_app;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CorpDw]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
      DTS:ObjectName="CorpDw">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCORPDW02;Initial Catalog=CorpDw;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=false;Application Name=SSIS-dimCustomerImport-{05449A6D-5C5C-4CA2-927E-94E42787D622}birm01815w.BettcherDw;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CorpMain]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7CFC0047-73DE-40F3-923B-977E5F1C0D96}"
      DTS:ObjectName="CorpMain">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=birmcorpdw01;Initial Catalog=CorpMain;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[GAN_App]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5B29B549-02A7-403E-B8B6-EF3D95CE5C74}"
      DTS:ObjectName="GAN_App">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCSIDBS;Initial Catalog=GAN_App;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-dimCustomerImport-{C9A6A73A-15E8-497C-B0E2-B4BE13249D09}BIRM01815K.GAN_App;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LTG_App]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{617F9755-BEAC-4FF7-A2C4-127D08E3973E}"
      DTS:ObjectName="LTG_App">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCSIDBS;Initial Catalog=LTG_App;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=false;Application Name=SSIS-dimCustomerImport-{738239AF-0F8B-45D5-965D-61CE0F24CC6F}cjack.bs;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MED_App]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DB74117E-0A23-4EA3-9880-59BD92E8BCA8}"
      DTS:ObjectName="MED_App">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BIRMCSIDBS;Initial Catalog=MED_App;Provider=SQLNCLI11;Integrated Security=SSPI;Application Name=SSIS-dimCustomerImport-{A96D1CEE-38C7-45B9-9AB7-B6C7CAC93591}BIRMCSIDBS.MED_App;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="E:\data\ssis\SsisConfig\CorpMain.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{2E9A8BFE-984E-4E91-87B4-2BC64796179A}"
      DTS:ObjectName="connCorpMainXml" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connBett_app&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{D3429F34-D7CC-4C0A-B043-7F4239CCE61C}"
      DTS:ObjectName="connBett_app" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connBettcherDw&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{0EA2DD03-112E-4807-A37D-A2D75F211B8C}"
      DTS:ObjectName="connBettcherDw" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connBsw_app&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{8D5680D7-FB88-4140-AF18-ED625950AB90}"
      DTS:ObjectName="connBsw_app" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connCorpDW&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{C462B5B8-0E09-4A5C-9562-5DA3CC8952FD}"
      DTS:ObjectName="connCorpDW" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connGan_app&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{DF2E5D47-33A3-4BDC-B368-595FCD364B3B}"
      DTS:ObjectName="connGan_app" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connLtg_app&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{E6E165DA-5C75-4D8E-A658-243922C906BC}"
      DTS:ObjectName="connLtg_app" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CorpMain&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;connMed_app&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{9FBC94CE-1BA1-4D87-88E0-7B270EB593BD}"
      DTS:ObjectName="connMed_app" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{834B657D-894D-43A8-849A-0905A646E9FA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DaysBack">
      <DTS:VariableValue
        DTS:DataType="3">30</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\MERGE dimGeographi"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3A7884BC-62CF-40E8-8FD9-6C7B990C6268}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="MERGE dimGeographi"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
          SQLTask:SqlStatementSource="MERGE dimGeographic AS target&#xA;    USING (SELECT DISTINCT &#xA;&#x9;&#x9;  [SiteKey] &#xA;      ,[City] &#xA;      ,[State]&#xA;      ,[CountryCode]&#xA;      ,[DomesticForeign] &#xA;      ,[CompanyNo] &#xA;      ,[CustNoAlternateKey] &#xA;      ,[CustNoSeqKey]&#xA;      ,[CustType] &#xA;      ,[SubRegionKeyAlternative] &#xA;      ,[RegionKeyAlternative]&#xA;      ,[Zip]&#xA;FROM         tblGeographicImport) AS source&#xA;    ON ( target.CustNoAlternateKey=source.CustNoAlternateKey&#xA;&#x9;AND target.CustNoSeqKey=source.CustNoSeqKey AND&#xA;&#x9;target.SiteKey=source.SiteKey)&#xA;   &#xA; WHEN MATCHED THEN &#xA;&#xA;     UPDATE SET &#xA;&#x9;&#xA;       &#xA;      [City] = source.City&#xA;      ,[State] = source.State&#xA;      ,[CountryCode] = source.CountryCode&#xA;      ,[DomesticForeign] = source.DomesticForeign&#xA;      ,[CompanyNo] = source.CompanyNo&#xA;      ,[CustNoAlternateKey] = source.CustNoAlternateKey&#xA;      ,[CustNoSeqKey] = source.CustNoSeqKey&#xA;      ,[CustType] = source.CustType&#xA;      ,[SubRegionKeyAlternative] = source.SubRegionKeyAlternative&#xA;      ,[RegionKeyAlternative] = source.RegionKeyAlternative&#xA;      ,[Zip] = source.Zip&#xA;&#xA;WHEN NOT MATCHED THEN &#xA;     INSERT ( &#xA;&#x9; SiteKey&#xA;&#x9; ,[City] &#xA;      ,[State] &#xA;      ,[CountryCode] &#xA;      ,[DomesticForeign] &#xA;      ,[CompanyNo] &#xA;      ,[CustNoAlternateKey] &#xA;      ,[CustNoSeqKey]&#xA;      ,[CustType] &#xA;      ,[SubRegionKeyAlternative] &#xA;      ,[RegionKeyAlternative] &#xA;      ,[Zip] &#xA;)&#xA;     VALUES (&#xA;&#x9; &#xA;&#x9; source.SiteKey&#xA;&#x9; ,source.[City] &#xA;      ,source.[State] &#xA;      ,source.[CountryCode] &#xA;      ,source.[DomesticForeign] &#xA;      ,source.[CompanyNo] &#xA;      ,source.[CustNoAlternateKey] &#xA;      ,source.[CustNoSeqKey]&#xA;      ,source.[CustType] &#xA;      ,source.[SubRegionKeyAlternative] &#xA;      ,source.[RegionKeyAlternative] &#xA;      ,source.[Zip] &#xA;);&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process BBR Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3d57e8c4-bae7-4d7f-98e6-416e2026dd1d}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process BBR Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process BBR Geographic\get and append BBR geographic"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DTSID="{cba145ac-f74d-4fb1-87ab-81622f333746}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append BBR geographic">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              engineThreads="5"
              version="1">
              <components>
                <component
                  refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input].Columns[city]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="city"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input].Columns[state]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="state"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input].Columns[country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="6"
                          cachedName="country"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input].Columns[zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5"
                          cachedName="zip"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[state]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[state]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[zip]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination - Query"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblGeographicImport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[sitekey]"
                          cachedDataType="i4"
                          cachedName="sitekey"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[sitekey]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[cust_num]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="cust_num"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_num]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[cust_seq]"
                          cachedDataType="i4"
                          cachedName="cust_seq"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_seq]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[cust_type]"
                          cachedDataType="i4"
                          cachedName="cust_type"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_type]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[city]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="city"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[state]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="state"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].Columns[zip]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="zip"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CompanyNo]"
                          dataType="wstr"
                          length="50"
                          name="CompanyNo" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          dataType="wstr"
                          length="20"
                          name="CustNoAlternateKey" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          dataType="i4"
                          name="CustNoSeqKey" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="50"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[DomesticForeign]"
                          dataType="wstr"
                          length="50"
                          name="DomesticForeign" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          dataType="i4"
                          name="CustType" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SubRegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="SubRegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[RegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="RegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT sitekey, cust_num, 0 AS cust_seq, 'NA' AS city, 'NA' AS state, 'BRAZIL' AS country, 1 AS cust_type, '00000' AS zip
FROM            tblInvoiceSalesImportBBR
where (inv_date &gt;= DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE())) - ?)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{834B657D-894D-43A8-849A-0905A646E9FA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[sitekey]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sitekey]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[sitekey]"
                          name="sitekey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_num]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          length="7"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_num]"
                          name="cust_num"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          name="cust_seq"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[state]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="6"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_type]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[cust_type]"
                          name="cust_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[zip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          length="5"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sitekey]"
                          dataType="i4"
                          name="sitekey" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          dataType="wstr"
                          length="7"
                          name="cust_num" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          dataType="i4"
                          name="cust_seq" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="state" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          dataType="i4"
                          name="cust_type" />
                        <externalMetadataColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          codePage="1252"
                          dataType="str"
                          length="5"
                          name="zip" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sitekey]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sitekey]"
                          name="sitekey" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          dataType="wstr"
                          length="7"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          name="cust_num" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          name="cust_seq" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                          name="city" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[state]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[state]"
                          name="state" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          name="cust_type" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[zip]"
                          codePage="1252"
                          dataType="str"
                          length="5"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[zip]"
                          name="zip" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process BBR Geographic\get and append BBR geographic.Paths[Data Conversion Output]"
                  endId="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query.Inputs[Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Process BBR Geographic\get and append BBR geographic.Paths[OLE DB Source Output]"
                  endId="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BBR Geographic\insert BBR company 0"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{81fe090a-6b27-4a14-a3f4-ec66215444c0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert BBR company 0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 6) AND (CustNoAlternateKey = N'0') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA; ,[CustType]  )&#xA;     VALUES&#xA;           (6           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Domestic'&#xA;            ,0&#xA;           ,0&#xA;,1)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BBR Geographic\Update Domestic and Foregin"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5adf5da2-f9ea-49ad-acf1-674eda4c08c4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Domestic and Foregin"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="&#xA;Update  dimGeographic&#xA;Set DomesticForeign=Case when custtype=2 Then 'Foreign' when custtype=3 Then 'InterCo' Else 'Domestic' End  &#xA;WHERE     (SiteKey = 6) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BBR Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0780C5E4-74E1-4F49-9A28-BD98A502405E}"
          DTS:From="Package\Process BBR Geographic\insert BBR company 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process BBR Geographic\Update Domestic and Foregin" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BBR Geographic.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{ad80a7af-2784-4a16-8302-1f1b794007a7}"
          DTS:From="Package\Process BBR Geographic\get and append BBR geographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process BBR Geographic\insert BBR company 0" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process BET Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2B3DE369-F738-4E94-9D31-C625CB146C59}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process BET Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\get and append betgeographic"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DTSID="{12858A15-8CF4-4C31-9DAC-13900E15C8D5}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append betgeographic">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              engineThreads="5"
              version="1">
              <components>
                <component
                  refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination - Query"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblGeographicImport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[SiteKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="SiteKey"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[cust_num]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="cust_num"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[cust_seq]"
                          cachedDataType="i4"
                          cachedName="cust_seq"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[state]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="state"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[city]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="city"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[cust_type]"
                          cachedDataType="wstr"
                          cachedLength="6"
                          cachedName="cust_type"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]" />
                        <inputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].Columns[zip]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="zip"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CompanyNo]"
                          dataType="wstr"
                          length="50"
                          name="CompanyNo" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          dataType="wstr"
                          length="20"
                          name="CustNoAlternateKey" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          dataType="i4"
                          name="CustNoSeqKey" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="50"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[DomesticForeign]"
                          dataType="wstr"
                          length="50"
                          name="DomesticForeign" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          dataType="i4"
                          name="CustType" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SubRegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="SubRegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[RegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="RegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process BET Geographic\get and append betgeographic\Source - Query"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Source - Query"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT 
                      1 AS SiteKey, LTRIM(cust_num) AS cust_num, cust_seq, ISNULL(rtrim(ltrim(city)), N'-') AS city, ISNULL(rtrim(ltrim(state)), N'-') AS state, country, 
                      
                          (SELECT     ISNULL(cust_type, 1) AS cust_type
                            FROM          customer_mst customer
                            WHERE      (cust_seq = 0) AND (custaddr.cust_num = cust_num)) AS cust_type, isnull(zip,'00000') as zip
FROM         custaddr_mst as custaddr
where (RecordDate &gt;= DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE())) - ?)
ORDER BY cust_num</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{834B657D-894D-43A8-849A-0905A646E9FA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Bet_App]"
                      connectionManagerRefId="Package.ConnectionManagers[Bet_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          length="3"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          name="SiteKey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          length="7"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          name="cust_num"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          name="cust_seq"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          length="30"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          length="5"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          length="6"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          name="cust_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          length="10"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          dataType="wstr"
                          length="7"
                          name="cust_num" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          dataType="i4"
                          name="cust_seq" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          dataType="wstr"
                          length="30"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          dataType="wstr"
                          length="5"
                          name="state" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          dataType="wstr"
                          length="6"
                          name="cust_type" />
                        <externalMetadataColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          dataType="wstr"
                          length="10"
                          name="zip" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          name="SiteKey" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          dataType="wstr"
                          length="7"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          name="cust_num" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          name="cust_seq" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          name="city" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          dataType="wstr"
                          length="5"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          name="state" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          dataType="wstr"
                          length="6"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          name="cust_type" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          name="zip" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process BET Geographic\get and append betgeographic.Paths[OLE DB Source Output]"
                  endId="Package\Process BET Geographic\get and append betgeographic\Destination - Query.Inputs[Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process BET Geographic\get and append betgeographic\Source - Query.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\insert Bet company 0"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{E582302C-6F2A-4937-8C51-598FB7CDA4D2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert Bet company 0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 1) AND (CustNoAlternateKey = N'0') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[custtype]&#xA;)&#xA;     VALUES&#xA;           (1&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Domestic'&#xA;            ,0&#xA;           ,0&#xA;,1)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\insert Bet company 0 foreign"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{0418C2AC-DE86-4199-84A3-4177171B240D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert Bet company 0 foreign"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 1) AND (CustNoAlternateKey = N'0-2') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;&#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,CustType)&#xA;     VALUES&#xA;           (1&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Foreign'&#xA;            , '0-2'&#xA;             ,0&#xA;,2)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\Merge any from tblBettcherDwCustomers"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BC568946-C091-41BC-94BD-0EF36EA33B24}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Merge any from tblBettcherDwCustomers"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="BEGIN TRANSACTION;&#xA;&#xA;MERGE dimGeographic AS target&#xA;    USING (SELECT DISTINCT SiteKey, CustNoKeyAlternative, CustNoSeqKey, CompanyNo, City, State, CountryDescription, CountryCode, ForeignDomestic&#xA;FROM         tblBettcherDwCustomer) AS source&#xA;    ON ( target.CustNoAlternateKey=source.CustNoKeyAlternative AND target.SiteKey=source.SiteKey)&#xA;   &#xA; &#xA;&#xA;WHEN NOT MATCHED THEN &#xA;     INSERT ( SiteKey,  CustNoAlternateKey, CustNoSeqKey, CompanyNo, City, State, CountryCode, DomesticForeign,CustType)&#xA;     VALUES (source.SiteKey, source.CustNoKeyAlternative, source.CustNoSeqKey, source.CompanyNo, source.city, source.State,source.CountryCode, source.ForeignDomestic,source.CompanyNo);&#xA;&#xA;&#xA;COMMIT TRANSACTION;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\Undate any USA country codes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3309D9AF-A997-4A60-9B11-84F1B4C8DF97}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Undate any USA country codes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="Update tblGeographicImport&#xA;Set   CountryCode='UNITED STATES'&#xA;WHERE     (CountryCode = N'USA')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BET Geographic\Update Domestic and Foregin"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1E6C29A2-808D-47CA-8C0C-176AFA506BD2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Domestic and Foregin"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="&#xA;Update  tblGeographicImport&#xA;Set DomesticForeign=Case when custtype=2 Then 'Foreign' when custtype=3 Then 'InterCo' Else 'Domestic' End  &#xA;WHERE     (SiteKey = 1) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BET Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{EB651B69-54FC-4DA1-8236-0BDF7D7BFDAD}"
          DTS:From="Package\Process BET Geographic\insert Bet company 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process BET Geographic\insert Bet company 0 foreign" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BET Geographic.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{1B678640-8931-422E-9684-92F75E6779EB}"
          DTS:From="Package\Process BET Geographic\get and append betgeographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process BET Geographic\insert Bet company 0" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BET Geographic.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{082AFAA4-BF94-4A3B-B489-A7F09FCADC79}"
          DTS:From="Package\Process BET Geographic\insert Bet company 0 foreign"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Process BET Geographic\Update Domestic and Foregin" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BET Geographic.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{2DD33436-06BC-46D1-9C0F-4E3FF000660C}"
          DTS:From="Package\Process BET Geographic\Update Domestic and Foregin"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Process BET Geographic\Merge any from tblBettcherDwCustomers" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BET Geographic.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{7E6210A4-7DD9-4A51-8365-B87B0A1386FD}"
          DTS:From="Package\Process BET Geographic\Merge any from tblBettcherDwCustomers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Process BET Geographic\Undate any USA country codes" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process BSW  Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{AAC31FA4-1C61-4915-B2EC-8E2899154FA3}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process BSW  Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process BSW  Geographic\get and append BSW geographic"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DTSID="{A5689B66-11AA-48C4-B0CA-64B359073028}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append BSW geographic">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              engineThreads="5"
              version="1">
              <components>
                <component
                  refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination - Query"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblGeographicImport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[SiteKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="SiteKey"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[cust_num]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="cust_num"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[cust_seq]"
                          cachedDataType="i4"
                          cachedName="cust_seq"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[state]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="state"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[city]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="city"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[cust_type]"
                          cachedDataType="wstr"
                          cachedLength="6"
                          cachedName="cust_type"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]" />
                        <inputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].Columns[zip]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="zip"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CompanyNo]"
                          dataType="wstr"
                          length="50"
                          name="CompanyNo" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          dataType="wstr"
                          length="20"
                          name="CustNoAlternateKey" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          dataType="i4"
                          name="CustNoSeqKey" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="50"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[DomesticForeign]"
                          dataType="wstr"
                          length="50"
                          name="DomesticForeign" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          dataType="i4"
                          name="CustType" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SubRegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="SubRegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[RegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="RegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Source - Query"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT 
                      5 AS SiteKey, LTRIM(cust_num) AS cust_num, cust_seq, ISNULL(city, N'NA') AS city, ISNULL(state, N'NA') AS state, country, 
                      
                          (SELECT     ISNULL(cust_type, 1) AS cust_type
                            FROM          customer_mst customer
                            WHERE      (cust_seq = 0) AND (custaddr.cust_num = cust_num)) AS cust_type,isnull(zip,'00000') as zip
FROM         custaddr_mst as custaddr
where (RecordDate &gt;= DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE())) - ?)
ORDER BY cust_num</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{834B657D-894D-43A8-849A-0905A646E9FA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[BSW_Apps]"
                      connectionManagerRefId="Package.ConnectionManagers[BSW_Apps]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          length="3"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          name="SiteKey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          length="7"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          name="cust_num"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          name="cust_seq"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          length="30"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          length="5"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          length="6"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          name="cust_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          length="10"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          dataType="wstr"
                          length="7"
                          name="cust_num" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          dataType="i4"
                          name="cust_seq" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          dataType="wstr"
                          length="30"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          dataType="wstr"
                          length="5"
                          name="state" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          dataType="wstr"
                          length="6"
                          name="cust_type" />
                        <externalMetadataColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          dataType="wstr"
                          length="10"
                          name="zip" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          name="SiteKey" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          dataType="wstr"
                          length="7"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          name="cust_num" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          name="cust_seq" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          name="city" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          dataType="wstr"
                          length="5"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          name="state" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          dataType="wstr"
                          length="6"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          name="cust_type" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          name="zip" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process BSW  Geographic\get and append BSW geographic.Paths[OLE DB Source Output]"
                  endId="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query.Inputs[Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BSW  Geographic\insert BSW company 0"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{7FF449BC-ACAA-42C3-AD8A-47700431255E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert BSW company 0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 5) AND (CustNoAlternateKey = N'0') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;&#x9;,[CustType]&#x9;&#x9;)&#xA;     VALUES&#xA;           (5           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Domestic'&#xA;            ,0&#xA;           ,0&#xA;,1)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BSW  Geographic\insert BSW company 0 foreign"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{6072BC7A-B8EC-49E6-838D-4D0E7B7AE479}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert BSW company 0 foreign"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 5) AND (CustNoAlternateKey = N'0-2') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;&#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[CustType])&#xA;     VALUES&#xA;           (5&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Foreign'&#xA;            , '0-2'&#xA;             ,0&#xA;,2)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process BSW  Geographic\Update Domestic and Foregin"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D6CBA555-BA4E-410A-8BD4-A3BD7FF6D95F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Domestic and Foregin"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="&#xA;Update  tblGeographicImport&#xA;Set DomesticForeign=Case when custtype=2 Then 'Foreign' when custtype=3 Then 'InterCo' Else 'Domestic' End  &#xA;WHERE     (SiteKey = 5) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{5D9F435B-A776-4947-87B6-BEB73C08D82B}"
          DTS:From="Package\Process BSW  Geographic\insert BSW company 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process BSW  Geographic\insert BSW company 0 foreign" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F66B7030-A855-4213-BBE4-A69B6751462C}"
          DTS:From="Package\Process BSW  Geographic\get and append BSW geographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process BSW  Geographic\insert BSW company 0" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{65E1FE8A-1C12-454F-82C9-BF3B441CE9A5}"
          DTS:From="Package\Process BSW  Geographic\insert BSW company 0 foreign"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Process BSW  Geographic\Update Domestic and Foregin" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process GAN Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{AF254CFC-5393-44F0-95CE-08020D7D72B6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process GAN Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process GAN Geographic\get and append gan geographic"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DTSID="{6B9FD9C2-6647-46DB-A648-AB763674A38C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append gan geographic">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              engineThreads="5"
              version="1">
              <components>
                <component
                  refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination - Query"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblGeographicImport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[SiteKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="SiteKey"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[cust_num]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="cust_num"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[cust_seq]"
                          cachedDataType="i4"
                          cachedName="cust_seq"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[state]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="state"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[city]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="city"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[cust_type]"
                          cachedDataType="wstr"
                          cachedLength="6"
                          cachedName="cust_type"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]" />
                        <inputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].Columns[zip]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="zip"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CompanyNo]"
                          dataType="wstr"
                          length="50"
                          name="CompanyNo" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          dataType="wstr"
                          length="20"
                          name="CustNoAlternateKey" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          dataType="i4"
                          name="CustNoSeqKey" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="50"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[DomesticForeign]"
                          dataType="wstr"
                          length="50"
                          name="DomesticForeign" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          dataType="i4"
                          name="CustType" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SubRegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="SubRegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[RegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="RegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Source - Query"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT 
                      2 AS SiteKey, LTRIM(cust_num) AS cust_num, cust_seq, ISNULL(city, N'NA') AS city, ISNULL(state, N'NA') AS state, country, 
                      
                          (SELECT     ISNULL(cust_type, 1) AS cust_type
                            FROM          customer_mst customer
                            WHERE      (cust_seq = 0) AND (custaddr.cust_num = cust_num)) AS cust_type,isnull(zip,'00000') as zip
FROM         custaddr_mst as custaddr
where (RecordDate &gt;= DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE())) - ?)
ORDER BY cust_num</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{834B657D-894D-43A8-849A-0905A646E9FA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[GAN_App]"
                      connectionManagerRefId="Package.ConnectionManagers[GAN_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          length="3"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          name="SiteKey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          length="7"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          name="cust_num"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          name="cust_seq"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          length="30"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          length="5"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          length="6"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          name="cust_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          length="10"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          dataType="wstr"
                          length="7"
                          name="cust_num" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          dataType="i4"
                          name="cust_seq" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          dataType="wstr"
                          length="30"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          dataType="wstr"
                          length="5"
                          name="state" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          dataType="wstr"
                          length="6"
                          name="cust_type" />
                        <externalMetadataColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          dataType="wstr"
                          length="10"
                          name="zip" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          name="SiteKey" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          dataType="wstr"
                          length="7"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          name="cust_num" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          name="cust_seq" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          name="city" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          dataType="wstr"
                          length="5"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          name="state" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          dataType="wstr"
                          length="6"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          name="cust_type" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          name="zip" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process GAN Geographic\get and append gan geographic.Paths[OLE DB Source Output]"
                  endId="Package\Process GAN Geographic\get and append gan geographic\Destination - Query.Inputs[Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process GAN Geographic\get and append gan geographic\Source - Query.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process GAN Geographic\insert GAN company 0"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{E66EB2F9-51A9-43C4-8BD8-24F792FDEB84}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert GAN company 0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 2) AND (CustNoAlternateKey = N'0') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA;&#x9;&#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[CustType])&#xA;     VALUES&#xA;           (2&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Domestic'&#xA;            ,0&#xA;           ,0&#xA;,1)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process GAN Geographic\insert GAN company 0 foreign"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{EB2C2E49-41C0-46F5-8AC8-F5332BEAD8FF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert GAN company 0 foreign"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 2) AND (CustNoAlternateKey = N'0-2') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA;&#x9;&#xA;&#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[CustType])&#xA;     VALUES&#xA;           (2&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Foreign'&#xA;            , '0-2'&#xA;             ,0&#xA;,2)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process GAN Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{05417CE9-3F4C-4CE8-95A0-1EBB5F8D53CF}"
          DTS:From="Package\Process GAN Geographic\insert GAN company 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process GAN Geographic\insert GAN company 0 foreign" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process GAN Geographic.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A54236EB-C946-42E7-848C-76575437F107}"
          DTS:From="Package\Process GAN Geographic\get and append gan geographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process GAN Geographic\insert GAN company 0" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{709150AE-B89F-4D6A-AEFB-18A196964319}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process Geographic\Create  dimGeographic"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Disabled="True"
          DTS:DTSID="{ADA84388-4B18-4498-9CD1-D5210BE758ED}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create  dimGeographic"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="CREATE TABLE [dbo].[dimGeographic](&#xA;&#x9;[SiteKey] [int] NOT NULL,&#xA;&#x9;[City] [nvarchar](50) NULL,&#xA;&#x9;[State] [nvarchar](50) NULL,&#xA;&#x9;[CountryCode] [nvarchar](50) NULL,&#xA;&#x9;[DomesticForeign] [nvarchar](50) NULL,&#xA;&#x9;[CompanyNo] [nvarchar](50) NULL,&#xA;&#x9;[CustNoAlternateKey] [nvarchar](20) NULL,&#xA;&#x9;[CustNoSeqKey] [int] NULL,&#xA;&#x9;[GeographicKey] [int] IDENTITY(1,1) NOT NULL,&#xA;[CustType] [int] NULL,&#xA;[SubRegionKeyAlternative] [nvarchar](100) NULL,&#xA;&#x9;[RegionKeyAlternative] [nvarchar](100) NULL,&#xA;[Zip] [nvarchar](10) NULL,&#xA; CONSTRAINT [PK_dimGeographic] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[GeographicKey] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Geographic\Drop dimGeographic"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Disabled="True"
          DTS:DTSID="{2D1C585C-36AB-41C6-ADA5-3480F30177FF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop dimGeographic"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="Drop TABLE [CorpDw].[dbo].[dimGeographic] &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Geographic\truncate tblGeoprhicImport"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{33EF5930-65F5-455D-BD89-8B415860AD34}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="truncate tblGeoprhicImport"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="truncate table tblGeographicImport" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C16A7A26-9A26-482F-B387-0B7F3842C534}"
          DTS:From="Package\Process Geographic\Drop dimGeographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process Geographic\Create  dimGeographic" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process MED Geographic"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{706EE852-945C-40B3-8B37-91B3EE6D3176}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process MED Geographic">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process MED Geographic\get and append MED geographic"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DTSID="{99E8C94F-50A1-4C02-A940-89BFAF553A32}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append MED geographic">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              engineThreads="5"
              version="1">
              <components>
                <component
                  refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination - Query"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblGeographicImport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destinaton. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">0</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[SiteKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3"
                          cachedName="SiteKey"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[cust_num]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="cust_num"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[cust_seq]"
                          cachedDataType="i4"
                          cachedName="cust_seq"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[state]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="state"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[city]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="city"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[cust_type]"
                          cachedDataType="wstr"
                          cachedLength="6"
                          cachedName="cust_type"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]" />
                        <inputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].Columns[zip]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="zip"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CompanyNo]"
                          dataType="wstr"
                          length="50"
                          name="CompanyNo" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoAlternateKey]"
                          dataType="wstr"
                          length="20"
                          name="CustNoAlternateKey" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustNoSeqKey]"
                          dataType="i4"
                          name="CustNoSeqKey" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="50"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="50"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CountryCode]"
                          dataType="wstr"
                          length="50"
                          name="CountryCode" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[DomesticForeign]"
                          dataType="wstr"
                          length="50"
                          name="DomesticForeign" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[CustType]"
                          dataType="i4"
                          name="CustType" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[SubRegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="SubRegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[RegionKeyAlternative]"
                          dataType="wstr"
                          length="100"
                          name="RegionKeyAlternative" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="10"
                          name="Zip" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process MED Geographic\get and append MED geographic\Source - Query"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation;Microsoft SqlServer v9; (C) 2005 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Source - Query"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT 
                      4 AS SiteKey, LTRIM(cust_num) AS cust_num, cust_seq, ISNULL(city, N'NA') AS city, ISNULL(state, N'NA') AS state, isNULL(country, 'UNITED STATES') as country, 
                      
                          (SELECT     ISNULL(cust_type, 1) AS cust_type
                            FROM          customer_mst customer
                            WHERE      (cust_seq = 0) AND (custaddr.cust_num = cust_num)) AS cust_type,isnull(zip,'00000') as zip
FROM         custaddr_mst as custaddr
where (RecordDate &gt;= DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE())) - ?)
ORDER BY cust_num</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{834B657D-894D-43A8-849A-0905A646E9FA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[MED_App]"
                      connectionManagerRefId="Package.ConnectionManagers[MED_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          length="3"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[SiteKey]"
                          name="SiteKey"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          length="7"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_num]"
                          name="cust_num"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_seq]"
                          name="cust_seq"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          length="30"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          length="5"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[state]"
                          name="state"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          length="6"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[cust_type]"
                          name="cust_type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          length="10"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].Columns[zip]"
                          name="zip"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[SiteKey]"
                          dataType="i4"
                          name="SiteKey" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_num]"
                          dataType="wstr"
                          length="7"
                          name="cust_num" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_seq]"
                          dataType="i4"
                          name="cust_seq" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[city]"
                          dataType="wstr"
                          length="30"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[state]"
                          dataType="wstr"
                          length="5"
                          name="state" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[cust_type]"
                          dataType="wstr"
                          length="6"
                          name="cust_type" />
                        <externalMetadataColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                          dataType="wstr"
                          length="10"
                          name="zip" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[SiteKey]"
                          name="SiteKey" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          dataType="wstr"
                          length="7"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_num]"
                          name="cust_num" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_seq]"
                          name="cust_seq" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[city]"
                          name="city" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          dataType="wstr"
                          length="5"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[state]"
                          name="state" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          dataType="wstr"
                          length="6"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[cust_type]"
                          name="cust_type" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[zip]"
                          name="zip" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process MED Geographic\get and append MED geographic.Paths[OLE DB Source Output]"
                  endId="Package\Process MED Geographic\get and append MED geographic\Destination - Query.Inputs[Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process MED Geographic\get and append MED geographic\Source - Query.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process MED Geographic\insert MED  company 0"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{DBFA2CD7-AFA7-4ED3-8FE8-22E2AAB60DB2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert MED  company 0"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 4) AND (CustNoAlternateKey = N'0') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[CustType])&#xA;     VALUES&#xA;           (4&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Domestic'&#xA;            ,0&#xA;           ,0&#xA;,1)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process MED Geographic\insert MED company 0 foreign"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{488ADA67-7412-4918-969E-3DCC16B44708}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="insert MED company 0 foreign"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="if not exists (SELECT     SiteKey, City, State, CountryCode, DomesticForeign, CompanyNo, CustNoAlternateKey, CustNoSeqKey, GeographicKey&#xA;FROM         dimGeographic&#xA;WHERE     (SiteKey = 4) AND (CustNoAlternateKey = N'0-2') AND (CustNoSeqKey = 0))&#xA;&#xA;Begin&#xA; &#xA;&#xA;INSERT INTO [CorpDw].[dbo].[dimGeographic]&#xA;           ([SiteKey]&#xA;           ,[City]&#xA;           ,[State]&#xA;           ,[CountryCode]&#xA;           ,[DomesticForeign]&#xA;           ,[CustNoAlternateKey]&#xA;           ,[CustNoSeqKey]&#xA;,[CustType])&#xA;     VALUES&#xA;           (4&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'NA'&#xA;           ,'Foreign'&#xA;            , '0-2'&#xA;             ,0&#xA;,2)&#xA;End&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process MED Geographic\Update Domestic and Foregin"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9CDF145F-91D7-4948-ABF3-218B17225771}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Domestic and Foregin"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="&#xA;&#xA;Update  tblGeographicImport &#xA;Set DomesticForeign=Case when custtype=2 Then 'Foreign' when custtype=3 Then 'InterCo' Else 'Domestic' End  &#xA;WHERE     (SiteKey = 4) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process MED Geographic.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{88867FFD-492C-423B-9E7B-B6672639E340}"
          DTS:From="Package\Process MED Geographic\insert MED  company 0"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process MED Geographic\insert MED company 0 foreign" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process MED Geographic.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A848CAEE-F51A-44BE-AB46-1E1E5D631F17}"
          DTS:From="Package\Process MED Geographic\get and append MED geographic"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process MED Geographic\insert MED  company 0" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process MED Geographic.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{D0A34BF9-A912-4C6F-92EC-D7ED7846C97B}"
          DTS:From="Package\Process MED Geographic\insert MED company 0 foreign"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Process MED Geographic\Update Domestic and Foregin" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process Region"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1596098D-8A6E-4DEF-B37C-533051F40745}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process Region">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Process Region\get and append bet country"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0324F576-F5B5-48C5-8433-30EC92A8CF66}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append bet country"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Process Region\get and append bet country\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblCountryTemp]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append bet country\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ssd_ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ssd_ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso_country_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="iso_country_code"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append bet country\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process Region\get and append bet country\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT country, ec_code, ssd_ec_code, iso_country_code
FROM         country_mst</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append bet country\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Bet_App]"
                      connectionManagerRefId="Package.ConnectionManagers[Bet_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          name="ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          name="iso_country_code"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          name="ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          name="iso_country_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process Region\get and append bet country.Paths[OLE DB Source Output]"
                  endId="Package\Process Region\get and append bet country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process Region\get and append bet country\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\get and append bsw country"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{75ab8ad1-6b1e-4444-ab79-aff006acc47e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append bsw country"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Process Region\get and append bsw country\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblCountryTemp]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append bsw country\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ssd_ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ssd_ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso_country_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="iso_country_code"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append bsw country\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process Region\get and append bsw country\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT country, ec_code, ssd_ec_code, iso_country_code
FROM         country_mst</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append bsw country\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[BSW_Apps]"
                      connectionManagerRefId="Package.ConnectionManagers[BSW_Apps]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          name="ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          name="iso_country_code"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          name="ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          name="iso_country_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process Region\get and append bsw country.Paths[OLE DB Source Output]"
                  endId="Package\Process Region\get and append bsw country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process Region\get and append bsw country\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\get and append gan country"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7662e262-0cb3-4ac7-9ccd-18e45d779d86}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append gan country"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Process Region\get and append gan country\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblCountryTemp]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append gan country\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ssd_ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ssd_ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso_country_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="iso_country_code"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append gan country\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process Region\get and append gan country\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT country, ec_code, ssd_ec_code, iso_country_code
FROM         country_mst</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append gan country\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[GAN_App]"
                      connectionManagerRefId="Package.ConnectionManagers[GAN_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          name="ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          name="iso_country_code"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          name="ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          name="iso_country_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process Region\get and append gan country.Paths[OLE DB Source Output]"
                  endId="Package\Process Region\get and append gan country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process Region\get and append gan country\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\get and append med country"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{ce00e1a5-4dee-4e33-9a51-a053694df741}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="get and append med country"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Process Region\get and append med country\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblCountryTemp]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append med country\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CorpDw]"
                      connectionManagerRefId="Package.ConnectionManagers[CorpDw]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country]"
                          cachedDataType="wstr"
                          cachedLength="30"
                          cachedName="country"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]" />
                        <inputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ssd_ec_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="ssd_ec_code"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]" />
                        <inputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso_country_code]"
                          cachedDataType="wstr"
                          cachedLength="2"
                          cachedName="iso_country_code"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append med country\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append med country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append med country\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Process Region\get and append med country\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DISTINCT country, ec_code, ssd_ec_code, iso_country_code
FROM         country_mst</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Process Region\get and append med country\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[MED_App]"
                      connectionManagerRefId="Package.ConnectionManagers[MED_App]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          length="30"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ec_code]"
                          name="ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].Columns[iso_country_code]"
                          name="iso_country_code"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                          dataType="wstr"
                          length="30"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          name="ssd_ec_code" />
                        <externalMetadataColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          name="iso_country_code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          dataType="wstr"
                          length="30"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                          name="country" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ec_code]"
                          name="ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ssd_ec_code]"
                          name="ssd_ec_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          dataType="wstr"
                          length="2"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[iso_country_code]"
                          name="iso_country_code" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Process Region\get and append med country.Paths[OLE DB Source Output]"
                  endId="Package\Process Region\get and append med country\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Process Region\get and append med country\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\Merge into tblCountrySubRegionImport"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{629E9F1B-FCD7-4474-90D7-5E07A17376EE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Merge into tblCountrySubRegionImport"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="BEGIN TRANSACTION;&#xA;&#xA;MERGE   tblCountryRegionImport AS target&#xA;    USING (SELECT DISTINCT country, iso_country_code&#xA;&#x9;&#x9;FROM         tblCountryTemp&#xA;&#x9;&#x9;WHERE     (iso_country_code IS NOT NULL)) AS source&#xA;    ON ( target.iso_country_code=source.iso_country_code )&#xA;   &#xA; &#xA;&#xA;WHEN NOT MATCHED THEN &#xA;     INSERT (country&#xA;&#x9;, iso_country_code&#xA;&#x9;)&#xA;     VALUES (source.country&#xA;&#x9;, source.iso_country_code&#xA;);&#xA;&#xA;&#xA;COMMIT TRANSACTION;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\Merge regions into dimGeographic"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{fbf93bf8-40a8-470e-b622-546e75c0f44e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Merge regions into dimGeographic"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="BEGIN TRANSACTION;&#xA;&#xA;MERGE dimGeographic AS target&#xA;    USING (SELECT DISTINCT country, SubRegionKeyAlternative, RegionKeyAlternative&#xA;&#x9;&#x9;FROM         tblCountryRegionImport) AS source&#xA;    ON (target.CountryCode=source.country)&#xA;     &#xA; WHEN MATCHED THEN &#xA;     Update set &#xA;     target.SubRegionKeyAlternative=&#xA;     case &#xA;   when &#xA;    len(source.SubRegionKeyAlternative)=0 OR source.SubRegionKeyAlternative is null Then 'Missing'&#xA;   Else&#xA;     source.SubRegionKeyAlternative&#xA;   &#xA;   End    &#xA;     &#xA;     &#xA;     ,&#xA;     target.RegionKeyAlternative=&#xA;   case &#xA;   when &#xA;    len(source.RegionKeyAlternative)=0 OR source.RegionKeyAlternative is null Then 'Missing'&#xA;   Else&#xA;     source.RegionKeyAlternative&#xA;   &#xA;   End;&#xA;&#xA;&#xA;COMMIT TRANSACTION;&#xA;&#xA;&#xA;BEGIN TRANSACTION;&#xA;&#xA;Update dimGeographic&#xA;Set SubRegionKeyAlternative='Missing', &#xA;                      RegionKeyAlternative='Missing'&#xA;&#xA;WHERE     (SubRegionKeyAlternative IS NULL) AND (RegionKeyAlternative IS NULL)&#xA;&#xA;COMMIT TRANSACTION;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Process Region\truncate table tblCountryTemp"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1FD7670E-ED75-48AF-9C9B-371FD9581443}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="truncate table tblCountryTemp"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{147CAE94-F0F9-492F-90F4-0305BB2226C3}"
              SQLTask:SqlStatementSource="truncate table [CorpDw].[dbo].[tblCountryTemp]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{78C92373-0D4B-4035-B965-D62435B9DCD7}"
          DTS:From="Package\Process Region\get and append med country"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Process Region\Merge into tblCountrySubRegionImport" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7C2213F5-1628-4879-944B-7EA312F15C12}"
          DTS:From="Package\Process Region\Merge into tblCountrySubRegionImport"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Process Region\Merge regions into dimGeographic" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{3C90A268-9FAD-4E12-9354-3CCDC308EBDC}"
          DTS:From="Package\Process Region\truncate table tblCountryTemp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Process Region\get and append bet country" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{22512608-FFCF-411F-9ABE-897B34FCCD19}"
          DTS:From="Package\Process Region\get and append bet country"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Process Region\get and append gan country" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{25DFF451-EDAC-402A-8DB9-8D9F243C89C1}"
          DTS:From="Package\Process Region\get and append gan country"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Process Region\get and append bsw country" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Process Region.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{8901D746-96AB-4C99-9978-6FD6DEB4ECB7}"
          DTS:From="Package\Process Region\get and append bsw country"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Process Region\get and append med country" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B188C6AC-1BED-4DA1-BB26-61DFF9D0ADB1}"
      DTS:From="Package\Process Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Process GAN Geographic" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CAC7FACA-6E76-4395-AB3C-3AFDD6EDA45D}"
      DTS:From="Package\Process GAN Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Process BET Geographic" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{92C74AF2-4C06-49A9-B94D-63B398F14FA9}"
      DTS:From="Package\Process BET Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Process MED Geographic" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{522A93C0-8564-4D3D-A2DF-DBCC63F822A3}"
      DTS:From="Package\Process MED Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Process BSW  Geographic" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{5212A384-F884-4FCF-A0FD-75A7D06A7F7C}"
      DTS:From="Package\Process BSW  Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Process BBR Geographic" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{AA520D35-28CE-458A-9846-5B6DF3F70D5F}"
      DTS:From="Package\Process BBR Geographic"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\MERGE dimGeographi" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{BC2B47B7-3179-403D-A635-8360B277F35F}"
      DTS:From="Package\MERGE dimGeographi"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Process Region" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="232,43.2"
          Id="Package\Process BBR Geographic\get and append BBR geographic"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\Process BBR Geographic\insert BBR company 0"
          TopLeft="31.1666666666667,82.5" />
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Process BBR Geographic\Update Domestic and Foregin"
          TopLeft="16.4027776898197,192.361114397813" />
        <EdgeLayout
          Id="Package\Process BBR Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="124.534722178243,124.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.8611143978128"
              Start="0,0"
              End="0,60.3611143978128">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.3611143978128" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BBR Geographic.PrecedenceConstraints[Constraint 1]"
          TopLeft="122.583333333333,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244.8,288.8"
          Size="244.8,332"
          Id="Package\Process BBR Geographic"
          TopLeft="528.373018057067,3150.5666383159" />
        <NodeLayout
          Size="223.2,41.6"
          Id="Package\Process BET Geographic\get and append betgeographic"
          TopLeft="30.1666666666667,5.5" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Process BET Geographic\insert Bet company 0"
          TopLeft="52.1666666666667,107.5" />
        <NodeLayout
          Size="215.2,41.6"
          Id="Package\Process BET Geographic\insert Bet company 0 foreign"
          TopLeft="34.1666666666667,209.5" />
        <NodeLayout
          Size="272.8,41.6"
          Id="Package\Process BET Geographic\Merge any from tblBettcherDwCustomers"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="224.8,41.6"
          Id="Package\Process BET Geographic\Undate any USA country codes"
          TopLeft="29.5000000000001,515.5" />
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Process BET Geographic\Update Domestic and Foregin"
          TopLeft="32.8333333333334,311.5" />
        <EdgeLayout
          Id="Package\Process BET Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="141.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BET Geographic.PrecedenceConstraints[Constraint 1]"
          TopLeft="141.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BET Geographic.PrecedenceConstraints[Constraint 2]"
          TopLeft="141.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BET Geographic.PrecedenceConstraints[Constraint 3]"
          TopLeft="141.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BET Geographic.PrecedenceConstraints[Constraint 4]"
          TopLeft="141.833333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,612.8"
          Size="284,655.2"
          Id="Package\Process BET Geographic"
          TopLeft="168.833333333334,1593.79019842929" />
        <NodeLayout
          Size="233.6,41.6"
          Id="Package\Process BSW  Geographic\get and append BSW geographic"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\Process BSW  Geographic\insert BSW company 0"
          TopLeft="30.1666666666667,107.5" />
        <NodeLayout
          Size="222.4,41.6"
          Id="Package\Process BSW  Geographic\insert BSW company 0 foreign"
          TopLeft="11.5,209.5" />
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Process BSW  Geographic\Update Domestic and Foregin"
          TopLeft="13.5,311.5" />
        <EdgeLayout
          Id="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="122.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint 1]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BSW  Geographic.PrecedenceConstraints[Constraint 2]"
          TopLeft="122.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244.8,408.8"
          Size="244.8,451.2"
          Id="Package\Process BSW  Geographic"
          TopLeft="188.166666666667,2820.45686509595" />
        <NodeLayout
          Size="228.8,41.6"
          Id="Package\Process GAN Geographic\get and append gan geographic"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\Process GAN Geographic\insert GAN company 0"
          TopLeft="27.5,107.5" />
        <NodeLayout
          Size="220.8,41.6"
          Id="Package\Process GAN Geographic\insert GAN company 0 foreign"
          TopLeft="9.50000000000003,209.5" />
        <EdgeLayout
          Id="Package\Process GAN Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="119.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process GAN Geographic.PrecedenceConstraints[Constraint 1]"
          TopLeft="119.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="240,408.8"
          Size="240,451.2"
          Id="Package\Process GAN Geographic"
          TopLeft="190.833333333333,1082.45686509595" />
        <NodeLayout
          Size="187.2,41.6"
          Id="Package\Process Geographic\Create  dimGeographic"
          TopLeft="211.5,107.5" />
        <NodeLayout
          Size="175.2,41.6"
          Id="Package\Process Geographic\Drop dimGeographic"
          TopLeft="217.5,5.5" />
        <EdgeLayout
          Id="Package\Process Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="305.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="206.4,41.6"
          Id="Package\Process Geographic\truncate tblGeoprhicImport"
          TopLeft="177.600002997262,212.941178323818" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="611.2,494.4"
          Size="611.2,537.6"
          Id="Package\Process Geographic"
          TopLeft="5.50000000000011,5.50000000000028" />
        <NodeLayout
          Size="232.8,41.6"
          Id="Package\Process MED Geographic\get and append MED geographic"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="188.8,41.6"
          Id="Package\Process MED Geographic\insert MED  company 0"
          TopLeft="27.5,107.5" />
        <NodeLayout
          Size="220.8,41.6"
          Id="Package\Process MED Geographic\insert MED company 0 foreign"
          TopLeft="11.5,209.5" />
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Process MED Geographic\Update Domestic and Foregin"
          TopLeft="12.8333333333334,311.5" />
        <EdgeLayout
          Id="Package\Process MED Geographic.PrecedenceConstraints[Constraint]"
          TopLeft="121.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process MED Geographic.PrecedenceConstraints[Constraint 1]"
          TopLeft="121.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process MED Geographic.PrecedenceConstraints[Constraint 2]"
          TopLeft="121.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244,408.8"
          Size="244,451.2"
          Id="Package\Process MED Geographic"
          TopLeft="188.833333333334,2309.12353176262" />
        <NodeLayout
          Size="209.6,41.6"
          Id="Package\Process Region\get and append bet country"
          TopLeft="32.1666666666667,107.5" />
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Process Region\get and append bsw country"
          TopLeft="30.1666666666667,311.5" />
        <NodeLayout
          Size="212.8,41.6"
          Id="Package\Process Region\get and append gan country"
          TopLeft="30.8333333333334,209.5" />
        <NodeLayout
          Size="215.2,41.6"
          Id="Package\Process Region\get and append med country"
          TopLeft="29.5,413.5" />
        <NodeLayout
          Size="263.2,41.6"
          Id="Package\Process Region\Merge into tblCountrySubRegionImport"
          TopLeft="5.50000000000006,515.5" />
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\Process Region\Merge regions into dimGeographic"
          TopLeft="16.8333333333334,617.5" />
        <NodeLayout
          Size="223.2,41.6"
          Id="Package\Process Region\truncate table tblCountryTemp"
          TopLeft="25.5,5.5" />
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint]"
          TopLeft="137.166666666667,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint 1]"
          TopLeft="137.166666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint 4]"
          TopLeft="137.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint 5]"
          TopLeft="137.166666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint 6]"
          TopLeft="137.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process Region.PrecedenceConstraints[Constraint 7]"
          TopLeft="137.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="275.2,713.6"
          Size="275.2,756.8"
          Id="Package\Process Region"
          TopLeft="162.071428376801,3395.79019930443" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="310.966666666667,543.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,539.356865095955"
              Start="0,0"
              End="0,531.856865095955">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,531.856865095955" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="310.833333333333,1533.79019842929">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999995"
              Start="0,0"
              End="0,52.4999999999995">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999995" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="310.833333333334,2249.12353176262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999998"
              Start="0,0"
              End="0,52.4999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="310.833333333334,2760.45686509595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000005"
              Start="0,0"
              End="0,52.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="432.966666666667,3046.05686509595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95.4063513904,270.509773219947"
              Start="0,0"
              End="87.9063513904,270.509773219947">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.7031756952,0" />
                  <mssgle:CubicBezierSegment
                    Point1="43.7031756952,0"
                    Point2="47.7031756952,0"
                    Point3="47.7031756952,4" />
                  <mssgle:LineSegment
                    End="47.7031756952,266.509773219947" />
                  <mssgle:CubicBezierSegment
                    Point1="47.7031756952,266.509773219947"
                    Point2="47.7031756952,270.509773219947"
                    Point3="51.7031756952,270.509773219947" />
                  <mssgle:LineSegment
                    End="87.9063513904,270.509773219947" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\MERGE dimGeographi"
          TopLeft="212.571432191498,3292.09412092453" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="301.32143028415,3333.69412092453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.0960783798964"
              Start="0,0"
              End="0,54.5960783798964">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5960783798964" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="528.373018057067,3370.5666383159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.001585865569,-57.6725173913665"
              Start="0,0"
              End="-127.501585865569,-57.6725173913665">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-50.3891281185024,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-50.3891281185024,0"
                    Point2="-54.3891281185024,0"
                    Point3="-54.3891281185024,-4" />
                  <mssgle:LineSegment
                    End="-54.3891281185024,-53.6725173913665" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.3891281185024,-53.6725173913665"
                    Point2="-54.3891281185024,-57.6725173913665"
                    Point3="-58.3891281185024,-57.6725173913665" />
                  <mssgle:LineSegment
                    End="-127.501585865569,-57.6725173913665" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Process BBR Geographic\get and append BBR geographic">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="151.2,43.2"
          Id="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source"
          TopLeft="33.333332836628,8.73333337982496" />
        <NodeLayout
          Size="172,43.2"
          Id="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query"
          TopLeft="16.3333335071802,112.233331326445" />
        <NodeLayout
          Size="156.8,43.2"
          Id="Package\Process BBR Geographic\get and append BBR geographic\Data Conversion"
          TopLeft="28.8333333209157,58.0666656283538" />
        <EdgeLayout
          Id="Package\Process BBR Geographic\get and append BBR geographic.Paths[OLE DB Source Output]"
          TopLeft="183.999999503295,30.0666667131583">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.1666671509544,43.5555544707511"
              Start="0,0"
              End="9.6666671509544,43.5555544707511">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.6666671509544,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.6666671509544,0"
                    Point2="24.6666671509544,0"
                    Point3="24.6666671509544,4" />
                  <mssgle:LineSegment
                    End="24.6666671509544,39.5555544707511" />
                  <mssgle:CubicBezierSegment
                    Point1="24.6666671509544,39.5555544707511"
                    Point2="24.6666671509544,43.5555544707511"
                    Point3="20.6666671509544,43.5555544707511" />
                  <mssgle:LineSegment
                    End="9.6666671509544,43.5555544707511" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process BBR Geographic\get and append BBR geographic.Paths[Data Conversion Output]"
          TopLeft="186.166666654249,79.3999989616871">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.16666685293117,54.1666656980912"
              Start="0,0"
              End="9.66666685293117,54.1666656980912">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.6666668529312,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.6666668529312,0"
                    Point2="24.6666668529312,0"
                    Point3="24.6666668529312,4" />
                  <mssgle:LineSegment
                    End="24.6666668529312,50.1666656980912" />
                  <mssgle:CubicBezierSegment
                    Point1="24.6666668529312,50.1666656980912"
                    Point2="24.6666668529312,54.1666656980912"
                    Point3="20.6666668529312,54.1666656980912" />
                  <mssgle:LineSegment
                    End="9.66666685293117,54.1666656980912" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process BBR Geographic\get and append BBR geographic\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process BBR Geographic\get and append BBR geographic\Destination - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Process BET Geographic\get and append betgeographic">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Process BET Geographic\get and append betgeographic\Source - Query"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Process BET Geographic\get and append betgeographic\Destination - Query"
          TopLeft="6.40000000000001,116" />
        <EdgeLayout
          Id="Package\Process BET Geographic\get and append betgeographic.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process BET Geographic\get and append betgeographic\Destination - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process BET Geographic\get and append betgeographic\Source - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Process BSW  Geographic\get and append BSW geographic">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query"
          TopLeft="0,108" />
        <EdgeLayout
          Id="Package\Process BSW  Geographic\get and append BSW geographic.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process BSW  Geographic\get and append BSW geographic\Destination - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process BSW  Geographic\get and append BSW geographic\Source - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Process GAN Geographic\get and append gan geographic">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,42.4"
          Id="Package\Process GAN Geographic\get and append gan geographic\Source - Query"
          TopLeft="119.166664890945,12.5666664419572" />
        <NodeLayout
          Size="172,42.4"
          Id="Package\Process GAN Geographic\get and append gan geographic\Destination - Query"
          TopLeft="68.3333323150873,94.8999983030558" />
        <EdgeLayout
          Id="Package\Process GAN Geographic\get and append gan geographic.Paths[OLE DB Source Output]"
          TopLeft="194.499998224278,55.2333331086238">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40.166665909191,39.666665194432"
              Start="0,0"
              End="-40.166665909191,32.166665194432">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.833332597216" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.833332597216"
                    Point2="0,19.833332597216"
                    Point3="-4,19.833332597216" />
                  <mssgle:LineSegment
                    End="-36.166665909191,19.833332597216" />
                  <mssgle:CubicBezierSegment
                    Point1="-36.166665909191,19.833332597216"
                    Point2="-40.166665909191,19.833332597216"
                    Point3="-40.166665909191,23.833332597216" />
                  <mssgle:LineSegment
                    End="-40.166665909191,32.166665194432" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process GAN Geographic\get and append gan geographic\Destination - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process GAN Geographic\get and append gan geographic\Source - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Process MED Geographic\get and append MED geographic">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,42.4"
          Id="Package\Process MED Geographic\get and append MED geographic\Source - Query"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="172,42.4"
          Id="Package\Process MED Geographic\get and append MED geographic\Destination - Query"
          TopLeft="0,83.6333318378528" />
        <EdgeLayout
          Id="Package\Process MED Geographic\get and append MED geographic.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process MED Geographic\get and append MED geographic\Destination - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process MED Geographic\get and append MED geographic\Source - Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Process Region\get and append bet country">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Process Region\get and append bet country\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Process Region\get and append bet country\OLE DB Destination"
          TopLeft="0,92.8" />
        <EdgeLayout
          Id="Package\Process Region\get and append bet country.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Region\get and append bsw country">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Region\get and append bsw country\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Region\get and append bsw country\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Process Region\get and append bsw country.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Region\get and append gan country">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Region\get and append gan country\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Process Region\get and append gan country\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Process Region\get and append gan country.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process Region\get and append med country">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150.666666666667,42.6666666666667"
          Id="Package\Process Region\get and append med country\OLE DB Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Process Region\get and append med country\OLE DB Destination"
          TopLeft="0,98.6666666666667" />
        <EdgeLayout
          Id="Package\Process Region\get and append med country.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>